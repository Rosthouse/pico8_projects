pico-8 cartridge // http://www.pico-8.com
version 41
__lua__

scene = 0

blocks = {}
paddle = {}
ball = {}
scenes = {}
ss = peek(0x5f57)

b_c = 10
b_r = 2

-- Engine Callbacks

function _init()
  setup_scenes()

  b_w = ss / b_c * 0.75

  setup_blocks(b_c, b_r, b_w, b_w / 3)
  setup_paddle()
  setup_ball(ss)
end

function _update()
  scenes[scene].update()
end

function _draw()
  scenes[scene].draw()
end

-- Initialization

function setup_scenes()
  scene = 0

  scenes[0] = {
    update = start_update,
    draw = start_draw
  }

  scenes[1] = {
    update = game_update,
    draw = game_draw
  }
end

function setup_blocks(col, row, w, h)
  for j = 0, row - 1, 1 do
    for i = 0, col - 1, 1 do
      a = i + j * row
      blocks[a] = {
        x = i, y = j, w = w, h = h, col = color(8)
      }
      print(a .. ": " .. blocks[a].x .. " " .. blocks[a].y)
    end
  end
end

function setup_paddle()
  -- Set up paddle
  paddle.xs = 20
  paddle.ys = 5
  paddle.x = 128 / 2 - paddle.xs / 2
  paddle.y = 128 - 10 - paddle.ys / 2
  paddle.speed = 2
end

function setup_ball(size)
  ball.x = size / 2
  ball.y = size / 2
  ball.r = 2
  ball.v_x = 1
  ball.v_y = 1
  ball.col = color(12)
end

-- Start Scene

function start_update()
  scene = 1
end

function start_draw()
end

-- Game Scene

function game_update()
  update_paddle()
  update_ball()
end

function update_paddle()
  if btn(0) then paddle.x = paddle.x - paddle.speed end
  if btn(1) then paddle.x = paddle.x + paddle.speed end

  if paddle.x < 0 then paddle.x = 0 end
  if paddle.x > 128 - 24 then paddle.x = 128 - 24 end
end

function update_ball()
  ball.x = ball.x + ball.v_x
  ball.y = ball.y + ball.v_y

  if ball.x < 0 then ball.v_x = -ball.v_x end
  if ball.x > ss then ball.v_x = -ball.v_x end
end

function game_draw()
  cls(0)

  -- local m_x = ss / b_c
  -- local m_x2 = 4

  -- local m_y = ss / b_r * 0.4

  -- Draw blocks
  for i = 0, b_c * b_r - 1, 1 do
    local b = blocks[i]
    print(b.x .. " " .. b.y)
    -- x = b.x * 10
    -- y = b.y * 10
    -- rectfill(x, y, x + b.w, y + b.h, b.col)
    -- print(b.x + b.y * b_r, x, y, 7)
  end

  -- -- Draw player
  -- spr(1, paddle.x, paddle.y, 3, 1)

  -- -- Draw ball
  -- circfill(ball.x, ball.y, ball.r, ball.col)
end

__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000008888888888888888888800000000000111111111111111111111111111111111111111111111111111111100000000000000000000000000000000
00700700081111111111111111111180000000000111111111111111111111111111111111111111111111111111111100000000000000000000000000000000
00077000811111111111111111111118000000000111111111111111111111111111111111111111111111111111111100000000000000000000000000000000
00077000811111111111111111111118000000000111111111111111111111111111111111111111111111111111111100000000000000000000000000000000
00700700081111111111111111111180000000000118111111111111111111111111111111111111111111111111111100000000000000000000000000000000
00000000008888888888888888888800000000000118811111111111111111111111111111111111111111111111111100000000000000000000000000000000
00000000000000000000000000000000000000000111888888881111111111111111111111111111111111111111111100000000000000000000000000000000
00000000000770000007700000077000000000000111811111188111111111111111111111111111111111111811111100000000000000000000000000000000
00000000000770000007700000077000000000000111811111118111111111111111111111111111111111111811111100000000000000000000000000000000
00000000000700000007000000070000000000000111881188118111111111111111111111111111111111111811111100000000000000000000000000000000
00000000007800000078700000787000000000000111181118888111111888111111111111111111111111111811111100000000000000000000000000000000
00000000087888000078700008887800000000000111181111118111188818811111111111111111111111118118111100000000000000000000000000000000
00000000007770000008700008077000000000000111181111188111188111811118888111111111111111118111111100000000000000000000000000000000
00000000077070000008700007707000000000000111181118881111188111118888008111181188811111118111111100000000000000000000000000000000
00000000070070000007700007007000000000000111188111111111188111118000888111181181881111118811111100000000000000000000000000000000
00000000000000000000000000000000000000000111111111111111181111118888811118181881188111111111111100000000000000000000000000000000
00000000000000000000000000000000000000000111111111881111111111111888111888188811118811111111111100000000000000000000000000000000
00000000000000000000000000000000000000000111111111181111111111111118888811111111111111111111111100000000000000000000000000000000
00000000000000000000000000000000000000000111111111181111111111111111111111111111111111111111111100000000000000000000000000000000
00000000000000000000000000000000000000000111111111118111111111111111111111111111111111111111111100000000000000000000000000000000
00000000000000000000000000000000000000000111111111118811111111111111111111111111111111111111111100000000000000000000000000000000
00000000000000000000000000000000000000000111111111111811111111111111111111111111111111111111111100000000000000000000000000000000
00000000000000000000000000000000000000000111111111111188111111111111111111111111111111111111111100000000000000000000000000000000
00000000000000000000000000000000000000000111111111111118111111111111111111111111111111111111111100000000000000000000000000000000
00000000000000000000000000000000000000000111111111111118811111111111111111111111111111111111111100000000000000000000000000000000
00000000000000000000000000000000000000000111111111111111888111111111111111111111111111111111111100000000000000000000000000000000
00000000000000000000000000000000000000000111111111111111881111111111111111111111111111111111111100000000000000000000000000000000
00000000000000000000000000000000000000000111111111111111111111111111111111111111111111111111111100000000000000000000000000000000
00000000000000000000000000000000000000000111111111111111111111111111111111111111111111111111111100000000000000000000000000000000
00000000000000000000000000000000000000000111111111111111111111111111111111111111111111111111111100000000000000000000000000000000
00000000000000000000000000000000000000000111111111111111111111111111111111111111111111111111111100000000000000000000000000000000
00000000000000000000000000000000000000000111111111111111111111111111111111111111111111111111111100000000000000000000000000000000
